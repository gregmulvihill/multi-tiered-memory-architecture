version: '3.8'

services:
  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - REDIS_HOST=redis
      - MONGODB_URI=mongodb://mongodb:27017
      - NEO4J_URI=bolt://neo4j:7687
      - QDRANT_HOST=qdrant
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./:/app
    depends_on:
      - redis
      - mongodb
      - neo4j
      - qdrant
      - kafka
    restart: unless-stopped
    networks:
      - mtma-network
  
  # Short-Term Memory (Redis)
  redis:
    image: redis:7.2
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - mtma-network
  
  # Document Storage (MongoDB)
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    restart: unless-stopped
    networks:
      - mtma-network
  
  # Relationship Storage (Neo4j)
  neo4j:
    image: neo4j:5.14
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/password
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
    volumes:
      - neo4j-data:/data
    restart: unless-stopped
    networks:
      - mtma-network
  
  # Vector Storage (Qdrant)
  qdrant:
    image: qdrant/qdrant:v1.7.0
    ports:
      - "6333:6333"  # HTTP
      - "6334:6334"  # gRPC
    volumes:
      - qdrant-data:/qdrant/storage
    restart: unless-stopped
    networks:
      - mtma-network
  
  # Event Streaming (Kafka)
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper
    restart: unless-stopped
    networks:
      - mtma-network
  
  kafka:
    image: bitnami/kafka:3.5
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    restart: unless-stopped
    networks:
      - mtma-network

volumes:
  redis-data:
  mongodb-data:
  neo4j-data:
  qdrant-data:
  zookeeper-data:
  kafka-data:

networks:
  mtma-network:
    driver: bridge
